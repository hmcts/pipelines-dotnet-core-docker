# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

variables:
  imageName: 'vhinfrastructure.azurecr.io/vh-docker:$(Build.BuildId)'
  azureSubscriptionEndpoint: 'Reform-CFT-VH-Dev'
  azureContainerRegistry: 'vhinfrastructure.azurecr.io'
  helmVersion: '2.12.3'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Docker image
    pool: vh-ubuntu-test
    steps:
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'vh_kube_dev_helm.key.pem'

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'vh_kube_dev_helm.cert.pem'

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'vh_kube_dev_ca.cert.pem'

    - task: Docker@2
      displayName: buildAndPush
      inputs:
        containerRegistry: 'vh-acr-dev'
        repository: 'hmcts/vh-dotnet-core-docker '
        Dockerfile: Dockerfile
        tags: |
         $(Build.BuildId)
         latest


- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment: deploy
    displayName: Deploy job
    environment: 'myFirstEnvironment'
    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: Write-Host "run your deployment steps"
            displayName: Run Deployment

          - task: HelmInstaller@0
            displayName: 'Install Helm $(helmVersion)'
            inputs: 
                helmVersion: $(helmVersion)
                checkLatestHelmVersion: false

          - task: HelmDeploy@0
            inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'a993ee82-40e5-4d87-a6f1-75f0a0458016'
                namespace: 'default'
                tillerNamespace: 'tiller'
                command: 'upgrade'
                chartName: 'vh-web-app'
                enableTls: true
                caCert: 'vh_kube_dev_ca.cert.pem'
                certificate: 'vh_kube_dev_helm.cert.pem'
                privatekey: 'vh_kube_dev_helm.key.pem'
                waitForExecution: false
                releaseName: 'vh-web-app'